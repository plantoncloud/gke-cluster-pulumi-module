package linkerd

import helmcommons "github.com/plantoncloud-inc/go-commons/kubernetes/helm"

// NamespaceLabels this label is needed for control-plane to work properly
var NamespaceLabels = map[string]string{"config.linkerd.io/admission-webhooks": "disabled"}

const (
	// IdentityTrustAnchorsPEM
	/*
		these were generated by following below instructions from [linkerd docs](https://linkerd.io/2/tasks/generate-certificates/) referenced in [linkerd helm installation docs](https://linkerd.io/2/tasks/install-helm/)
		```bash
		brew install step;
		step certificate create identity.linkerd.cluster.local ca.crt ca.key --profile root-ca --no-password --insecure --san identity.linkerd.cluster.local
		step certificate create identity.linkerd.cluster.local issuer.crt issuer.key --ca ca.crt --ca-key ca.key --profile intermediate-ca --not-after 8760h --no-password --insecure --san identity.linkerd.cluster.local
		```
	*/
	IdentityTrustAnchorsPEM = `
-----BEGIN CERTIFICATE-----
MIIBjTCCATSgAwIBAgIRAMVUp2ocGoqz6XoV0N+jWfowCgYIKoZIzj0EAwIwJTEj
MCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjExMjAzMDcw
NjA1WhcNMzExMjAxMDcwNjA1WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1
c3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGUgUEThfsV7GSbf
mxr+455vn+DTf+n8Bg92jUv2cfH8rfIfn2pfjHJLHvkd1LG2QEn7ClhGeq3okYtN
8iIXc8yjRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G
A1UdDgQWBBSRHWRJjJrEmUcng2IgSkTYSiO0AzAKBggqhkjOPQQDAgNHADBEAiBz
YuqGqDZZhuiu98hQv5rewF1D+fVWtvw+Kupr03PJVgIgRpjPEHBAdnCZo9tqJatA
rLFq+8lyZoIEslKs++q4eGM=
-----END CERTIFICATE-----
`
	IdentityIssuerTlsCrtPEM = `
-----BEGIN CERTIFICATE-----
MIIBsTCCAVigAwIBAgIQNDgtlu3eUXwU7dOjHoKE+jAKBggqhkjOPQQDAjAlMSMw
IQYDVQQDExpyb290LmxpbmtlcmQuY2x1c3Rlci5sb2NhbDAeFw0yMTEyMDMwNzA3
MTlaFw0yMjEyMDMwNzA3MTlaMCkxJzAlBgNVBAMTHmlkZW50aXR5LmxpbmtlcmQu
Y2x1c3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHYjZWrBNn7J
jc0GFPN18Zh+Tf2Z0vCHHz0WrYInR+ZMyREJpt9ylrotzJMcrWNUaqRoQfED1aql
HcldCBECC+qjZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEA
MB0GA1UdDgQWBBRzORSpr17wM0+9ms2q8Xgitf9e+TAfBgNVHSMEGDAWgBSRHWRJ
jJrEmUcng2IgSkTYSiO0AzAKBggqhkjOPQQDAgNHADBEAiAnGbIejVSiyJNUemgE
/Z5Ty5Iqit7vTZxhMx064+7/wAIgeplv1EEXjVN4lO247AkP42U01//OjjEhroHT
zbWwkZs=
-----END CERTIFICATE-----
`
	IdentityIssuerTlsKeyPEM = `
-----BEGIN EC PRIVATE KEY-----
MHcCAQEEICygxKJPGWhYwe3cN+SbLbJKOztKgLrrr2Y4I6+NxZzNoAoGCCqGSM49
AwEHoUQDQgAEdiNlasE2fsmNzQYU83XxmH5N/ZnS8IcfPRatgidH5kzJEQmm33KW
ui3MkxytY1RqpGhB8QPVqqUdyV0IEQIL6g==
-----END EC PRIVATE KEY-----
`
	Namespace = "linkerd"
)

type IssuerTls struct {
	CertPem string `yaml:"crtPEM"`
	KeyPem  string `yaml:"keyPEM"`
}

type Issuer struct {
	CertExpiry string     `yaml:"crtExpiry"`
	Tls        *IssuerTls `yaml:"tls"`
}

type Identity struct {
	Issuer *Issuer `yaml:"issuer"`
}

type Prometheus struct {
	Enabled bool `yaml:"enabled"`
}

type Grafana struct {
	Enabled bool `yaml:"enabled"`
}

type HelmVal struct {
	EnforcedHostRegexp      string      `yaml:"enforcedHostRegexp"`
	Identity                *Identity   `yaml:"identity"`
	InstallNamespace        bool        `yaml:"installNamespace"`
	Prometheus              *Prometheus `yaml:"prometheus"`
	Grafana                 *Grafana    `yaml:"grafana"`
	IdentityTrustAnchorsPEM string      `yaml:"identityTrustAnchorsPEM"`
}

func GetHelmVal() *HelmVal {
	return &HelmVal{
		InstallNamespace:        false,
		Prometheus:              &Prometheus{Enabled: false},
		Grafana:                 &Grafana{Enabled: false},
		IdentityTrustAnchorsPEM: IdentityTrustAnchorsPEM,
		Identity: &Identity{
			Issuer: &Issuer{
				//todo: figure out how to generate this timestamp in golang
				CertExpiry: "2022-12-03T06:57:16Z", //generated this by running date -d '+8760 hour' +"%Y-%m-%dT%H:%M:%SZ" inside a ubuntu docker container
				Tls: &IssuerTls{
					CertPem: IdentityIssuerTlsCrtPEM,
					KeyPem:  IdentityIssuerTlsKeyPEM,
				},
			},
		},
	}
}

func GetHelmChart() *helmcommons.Chart {
	return &helmcommons.Chart{
		ReleaseName: "linkerd2",
		Repo:        "https://helm.linkerd.io/stable",
		Name:        "linkerd2",
		Version:     "2.11.4",
	}
}
